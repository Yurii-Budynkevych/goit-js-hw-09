{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,QAC9BE,KAAMH,SAASC,cAAc,QAC7BG,OAAQJ,SAASC,cAAc,SAIjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEpBU,EAAO,C,SAAEN,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAXbJ,EAAKC,KAAKe,iBAAiB,UAe3B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOpB,EAAKI,MAAMiB,OACnC,MAAMhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAElC,IAAK,IAAIC,EAAQ,EAAGA,GAAShB,EAAQgB,IACnCf,EAAce,EAAOH,GAClBI,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,MACjBoB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBlB,QAAiBJ,MAAU,IAGnDuB,OAAM,EAACnB,SAAEA,EAAQJ,MAAEA,MAClBoB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBpB,QAAeJ,MAAU,IAGnDe,GAAcd,EAGhBY,EAAIY,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('#qwe'),\n  step: document.querySelector('#asd'),\n  amount: document.querySelector('#zxc'),\n};\nrefs.form.addEventListener('submit', onSubmit);\n// ________________________________________________________________________________\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// ________________________________________________________________________________\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let firstDelay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let index = 1; index <= amount; index++) {\n    createPromise(index, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += step;\n  }\n\n  evt.currentTarget.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","firstDelay","Number","value","index","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.e327eff3.js.map"}